// <auto-generated />
using System;
using ExamenGranjaPorcina.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ExamenGranjaPorcina.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ExamenGranjaPorcina.Models.Cerdo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("Date");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("Date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumeroCorral")
                        .HasColumnType("integer");

                    b.Property<double>("Peso")
                        .HasColumnType("double precision");

                    b.Property<bool>("Vendido")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Cerdo");
                });

            modelBuilder.Entity("ExamenGranjaPorcina.Models.Vacunas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CerdoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("Date");

                    b.Property<string>("Vacuna")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CerdoId");

                    b.ToTable("Vacunas");
                });

            modelBuilder.Entity("ExamenGranjaPorcina.Models.Ventas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CerdoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("Date");

                    b.Property<string>("NomComprador")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Precio")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("CerdoId");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("ExamenGranjaPorcina.Models.Vacunas", b =>
                {
                    b.HasOne("ExamenGranjaPorcina.Models.Cerdo", "Cerdo")
                        .WithMany("Vacunas")
                        .HasForeignKey("CerdoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cerdo");
                });

            modelBuilder.Entity("ExamenGranjaPorcina.Models.Ventas", b =>
                {
                    b.HasOne("ExamenGranjaPorcina.Models.Cerdo", "Cerdo")
                        .WithMany("Ventas")
                        .HasForeignKey("CerdoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cerdo");
                });

            modelBuilder.Entity("ExamenGranjaPorcina.Models.Cerdo", b =>
                {
                    b.Navigation("Vacunas");

                    b.Navigation("Ventas");
                });
#pragma warning restore 612, 618
        }
    }
}
